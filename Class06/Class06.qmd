---
title: "Class06: R Functions"
author: "Hailey Wheeler (A13312713)"
format: pdf
---

## All about functions in R 

Every function in R has at least 3 things: 
1. A name (you pick it)
2. An argument (the input(s) to your function)
3. the body

Goal: Write a function to grade a class of student assignment scores (homework, etc)

Simplified vector where I know what the answer will be: 

```{r}
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

Make sure it is displayed in the environment 

```{r}
mean(student1)
```

How do we drop the lowest score? 

```{r}
min(student1)
mean(student1) - min(student1)
which.min(student1)
student1[-8]
```


```{r}
mean(student1, which.min(-8))
```
```{r}
student1 <- which.min(student1)
```
```{r}
grade <- function(x){
  x[is.na(x)] <- 0
    x_dropped <- x[-which.min(x)]
    mean(x_dropped)
    }
```

```{r}
grade(student1)
```

```{r}
grade(student1)
grade(student2)
grade(student3)
sum(is.na(student2))
sum(is.na(student3))
mean(student3, na.rm = TRUE)
```

Question #1: Write grade function to determine overall grade from a vector of student homework assignment scores droopping the lowest single score. 
```{r}
## Load Gradeboook
gradebook <- read.csv("https://tinyurl.com/gradeinput", row.names = 1)

## Write Function 
grade <- function(x){
  ## Turn all NAs to 0
  x[is.na(x)] <- 0
  ## Drop the lowest score 
  x_dropped <- x[-which.min(x)]
  ## Average student grade (excluding the lowest received score)
  mean(x_dropped)
}

## Confirm code works by using student2 example from before
grade(student2)
```

Question #2: Who is the top scoring student overall in the gradebook?
```{r}
## Apply the grade function to the gradebook data frame to identify the average scores of all students 
apply(gradebook, 1, grade)
## Identify the top scoring student
which.max(apply(gradebook,1, grade))
## Identify the top score 
max(apply(gradebook, 1, grade))
```

Question #3: Which homework was toughest on students? 
```{r}
## Identify which homework (column) had the lowest scores. 
which.min(apply(gradebook, 2, grade))

## Note: the grade function drops the lowest score, so create new score without x_dropped to confirm the toughest assignment. 

grade_nodrop <- function(x){
  x[is.na(x)] <- 0
  mean(x)
}

## Alternative way to mask NAs: create extra dataframe where the function 'mask' is used to mask all NAs as 0s
mask <- gradebook 
mask[is.na(mask)] <-0 
mask
which.min(apply(mask, 2, grade))

## Apply grade_nodrop function on gradebook database. 
which.min(apply(gradebook, 2, grade_nodrop))
ncol(gradebook)
nrow(gradebook)
dim(gradebook)
help("mean")
?cbind
help(mean())
```

Q4: Which homework(column) was most predictive of overall score? Do not remove zeros. 
```{r}
## Create a new data frame "Final Grade" 
Final_Grade <- as.data.frame(apply(gradebook, 1, grade))
colnames(Final_Grade) = "Scores"

## Combine gradebook and Final Grade data frames 
final_gradebook <- cbind(gradebook,Final_Grade)
final_gradebook

## Mask NAs as 0s in the final gradebook dataframe
mask <- final_gradebook
mask[is.na(mask)] <-0 
mask

## Find the correlation between the final grade and the hw assignment. 
cor <- cor(mask[,1:5], mask[,6])
which.max(cor); max(cor)
```